Menu="Utilities"
Type="xmenu"
Title="Automover"
Icon="zip.png"
Tag="zip.png"
---
<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Load settings
$configPath = "/boot/config/plugins/automover/settings.cfg";
$settings = @parse_ini_file($configPath) ?: [];

// Set defaults
$threshold = $settings['THRESHOLD'] ?? 80;
$dryRun = $settings['DRY_RUN'] ?? 'no';
$interval = $settings['INTERVAL'] ?? 60;
$selectedDisk = $settings['POOL_NAME'] ?? 'cache';

// Load disk list
$diskData = @parse_ini_file("/var/local/emhttp/disks.ini", true) ?: [];
$disks = [];

foreach ($diskData as $disk) {
  if (!isset($disk['name'])) continue;
  $name = $disk['name'];
  if (in_array($name, ['parity', 'parity2', 'flash']) || strpos($name, 'disk') !== false) continue;
  $disks[] = $name;
}

// Save settings
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['save'])) {
  $newSettings = [
    'POOL_NAME' => $_POST['POOL_NAME'] ?? '',
    'THRESHOLD' => $_POST['THRESHOLD'] ?? '',
    'DRY_RUN' => $_POST['DRY_RUN'] ?? 'no',
    'INTERVAL' => $_POST['INTERVAL'] ?? 60,
  ];
  file_put_contents($configPath, http_build_query($newSettings, '', PHP_EOL));
  echo "<div style='color: green;'>‚úÖ Settings saved!</div>";
  $threshold = $newSettings['THRESHOLD'];
  $dryRun = $newSettings['DRY_RUN'];
  $interval = $newSettings['INTERVAL'];
  $selectedDisk = $newSettings['POOL_NAME'];
}

// Handle start/stop
$pidFile = "/var/run/automover.pid";

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  if (isset($_POST['start'])) {
    exec("/usr/bin/automover.sh >/dev/null 2>&1 &");
    echo "<div style='color: green;'>‚ñ∂Ô∏è Automover started</div>";
  }
  if (isset($_POST['stop'])) {
    if (file_exists($pidFile)) {
      $pid = trim(file_get_contents($pidFile));
      if (is_numeric($pid)) {
        exec("kill $pid");
        echo "<div style='color: red;'>‚õî Automover stopped</div>";
        unlink($pidFile);
      }
    } else {
      echo "<div style='color: gray;'>‚ÑπÔ∏è No running process</div>";
    }
  }
}

// Service status for initial load (will be live updated)
$serviceStatus = "‚ö™ Not Running";
if (file_exists($pidFile)) {
  $pid = trim(file_get_contents($pidFile));
  if (is_numeric($pid) && file_exists("/proc/$pid")) {
    $serviceStatus = "üü¢ Running";
  } else {
    $serviceStatus = "‚ö†Ô∏è Stale PID";
  }
}
?>

<h2>Automover Plugin</h2>

<form method="POST">
  <label><strong>Disk / Pool:</strong></label><br>
  <select name="POOL_NAME">
    <?php foreach ($disks as $disk):
      $mountPoint = "/mnt/{$disk}";
      $usedPercent = trim(shell_exec("df --output=pcent $mountPoint | tail -1 | tr -d ' %\n'"));
      if ($usedPercent === '') $usedPercent = 'N/A';
    ?>
      <option value="<?=htmlspecialchars($disk)?>" <?= $disk === $selectedDisk ? 'selected' : '' ?>>
        <?=htmlspecialchars($disk)?> [<?=htmlspecialchars($usedPercent)?>%]
      </option>
    <?php endforeach; ?>
  </select><br><br>

  <label><strong>Threshold (%)</strong></label><br>
  <input type="number" name="THRESHOLD" value="<?=htmlspecialchars($threshold)?>" min="1" max="100"><br><br>

  <label><strong>Dry Run:</strong></label><br>
  <select name="DRY_RUN">
    <option value="no" <?= $dryRun === 'no' ? 'selected' : '' ?>>No</option>
    <option value="yes" <?= $dryRun === 'yes' ? 'selected' : '' ?>>Yes</option>
  </select><br><br>

  <label><strong>Interval (seconds):</strong></label><br>
  <input type="number" name="INTERVAL" value="<?=htmlspecialchars($interval)?>" min="10"><br><br>

  <button type="submit" name="save">üíæ Save Settings</button>
  <button type="submit" name="start">‚ñ∂Ô∏è Start</button>
  <button type="submit" name="stop">‚õî Stop</button>
</form>

<hr>
<p><strong>Status:</strong> <span id="statusText"><?= $serviceStatus ?></span></p>

<script>
function updateStatus() {
    fetch('/plugins/automover/helpers/status.php')
        .then(response => response.text())
        .then(status => {
            document.getElementById('statusText').textContent = status;
        })
        .catch(err => {
            console.error('Error fetching status:', err);
        });
}

// Initial call to show status immediately
updateStatus();

// Update status every 5 seconds
setInterval(updateStatus, 5000);
</script>
